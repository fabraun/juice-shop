{
  "SchemaVersion": 2,
  "ArtifactName": "GitHub\\juice-shop\\scanresults\\Syft_Grype\\sbom_030423.json",
  "ArtifactType": "cyclonedx",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "Node.js",
      "Class": "lang-pkgs",
      "Type": "node-pkg",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "NSWG-ECO-428",
          "PkgName": "base64url",
          "InstalledVersion": "0.0.6",
          "FixedVersion": "\u003e=3.0.0",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "PrimaryURL": "https://hackerone.com/reports/321687",
          "Ref": "pkg:npm/base64url@0.0.6?package-id=d9d829a3e1a02f74",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "Out-of-bounds Read",
          "Description": "`base64url` allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below",
          "Severity": "HIGH",
          "References": [
            "https://github.com/brianloveswords/base64url/pull/25",
            "https://hackerone.com/reports/321687"
          ]
        },
        {
          "VulnerabilityID": "GHSA-rvg8-pwq2-xj7q",
          "PkgName": "base64url",
          "InstalledVersion": "0.0.6",
          "FixedVersion": "3.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-rvg8-pwq2-xj7q",
          "Ref": "pkg:npm/base64url@0.0.6?package-id=d9d829a3e1a02f74",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Out-of-bounds Read in base64url",
          "Description": "Versions of `base64url` before 3.0.0 are vulnerable to to out-of-bounds reads as it allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.",
          "Severity": "MEDIUM",
          "References": [
            "https://github.com/advisories/GHSA-rvg8-pwq2-xj7q",
            "https://github.com/brianloveswords/base64url/pull/25",
            "https://hackerone.com/reports/321687",
            "https://www.npmjs.com/advisories/658"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-41940",
          "PkgName": "engine.io",
          "InstalledVersion": "4.1.2",
          "FixedVersion": "6.2.1, 3.6.1",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-41940",
          "Ref": "pkg:npm/engine.io@4.1.2?package-id=37ed89f0ef711a8",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "engine.io: Specially crafted HTTP request can trigger an uncaught exception",
          "Description": "Engine.IO is the implementation of transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO. A specially crafted HTTP request can trigger an uncaught exception on the Engine.IO server, thus killing the Node.js process. This impacts all the users of the engine.io package, including those who uses depending packages like socket.io. There is no known workaround except upgrading to a safe version. There are patches for this issue released in versions 3.6.1 and 6.2.1.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-248"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 6.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 6.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 6.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-41940",
            "https://github.com/advisories/GHSA-r7qp-cfhv-p84w",
            "https://github.com/socketio/engine.io/commit/425e833ab13373edf1dd5a0706f07100db14e3c6",
            "https://github.com/socketio/engine.io/commit/83c4071af871fc188298d7d591e95670bf9f9085",
            "https://github.com/socketio/engine.io/security/advisories/GHSA-r7qp-cfhv-p84w",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-41940"
          ],
          "PublishedDate": "2022-11-22T01:15:00Z",
          "LastModifiedDate": "2022-11-26T03:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-15084",
          "PkgName": "express-jwt",
          "InstalledVersion": "0.1.3",
          "FixedVersion": "6.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-15084",
          "Ref": "pkg:npm/express-jwt@0.1.3?package-id=6de06fd89643960b",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Authorization bypass in express-jwt",
          "Description": "In express-jwt (NPM package) up and including version 5.3.3, the algorithms entry to be specified in the configuration is not being enforced. When algorithms is not specified in the configuration, with the combination of jwks-rsa, it may lead to authorization bypass. You are affected by this vulnerability if all of the following conditions apply: - You are using express-jwt - You do not have **algorithms** configured in your express-jwt configuration. - You are using libraries such as jwks-rsa as the **secret**. You can fix this by specifying **algorithms** in the express-jwt configuration. See linked GHSA for example. This is also fixed in version 6.0.0.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-863"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N",
              "V3Score": 7.7
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V2Score": 4.3,
              "V3Score": 9.1
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-6g6m-m6h5-w9gf",
            "https://github.com/auth0/express-jwt/commit/7ecab5f8f0cab5297c2b863596566eb0c019cdef",
            "https://github.com/auth0/express-jwt/security/advisories/GHSA-6g6m-m6h5-w9gf",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-15084"
          ],
          "PublishedDate": "2020-06-30T16:15:00Z",
          "LastModifiedDate": "2022-10-21T18:00:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-33987",
          "PkgName": "got",
          "InstalledVersion": "8.3.2",
          "FixedVersion": "11.8.5, 12.1.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-33987",
          "Ref": "pkg:npm/got@8.3.2?package-id=857af8db1c2b0305",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-got: missing verification of requested URLs allows redirects to UNIX sockets",
          "Description": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V3Score": 5.3
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V2Score": 5,
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2022:6595",
            "https://access.redhat.com/security/cve/CVE-2022-33987",
            "https://bugzilla.redhat.com/1907444",
            "https://bugzilla.redhat.com/1945459",
            "https://bugzilla.redhat.com/1964461",
            "https://bugzilla.redhat.com/2007557",
            "https://bugzilla.redhat.com/2098556",
            "https://bugzilla.redhat.com/2102001",
            "https://bugzilla.redhat.com/2105422",
            "https://bugzilla.redhat.com/2105426",
            "https://bugzilla.redhat.com/2105428",
            "https://bugzilla.redhat.com/2105430",
            "https://errata.almalinux.org/9/ALSA-2022-6595.html",
            "https://github.com/advisories/GHSA-pfrx-2q88-qq97",
            "https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc",
            "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0",
            "https://github.com/sindresorhus/got/pull/2047",
            "https://github.com/sindresorhus/got/releases/tag/v11.8.5",
            "https://github.com/sindresorhus/got/releases/tag/v12.1.0",
            "https://linux.oracle.com/cve/CVE-2022-33987.html",
            "https://linux.oracle.com/errata/ELSA-2022-6595.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-33987"
          ],
          "PublishedDate": "2022-06-18T21:15:00Z",
          "LastModifiedDate": "2022-06-28T16:15:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-25881",
          "PkgName": "http-cache-semantics",
          "InstalledVersion": "3.8.1",
          "FixedVersion": "4.1.1",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-25881",
          "Ref": "pkg:npm/http-cache-semantics@3.8.1?package-id=1d2661cdff4bacba",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "http-cache-semantics: Regular Expression Denial of Service (ReDoS) vulnerability",
          "Description": "This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-1333"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-25881",
            "https://github.com/advisories/GHSA-rc47-6667-2j5j",
            "https://github.com/kornelski/http-cache-semantics/blob/master/index.js%23L83",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-25881",
            "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3253332",
            "https://security.snyk.io/vuln/SNYK-JS-HTTPCACHESEMANTICS-3248783"
          ],
          "PublishedDate": "2023-01-31T05:15:00Z",
          "LastModifiedDate": "2023-02-07T17:07:00Z"
        },
        {
          "VulnerabilityID": "CVE-2015-9235",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.1.0",
          "FixedVersion": "4.2.2",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2015-9235",
          "Ref": "pkg:npm/jsonwebtoken@0.1.0?package-id=c2cb957234b9ea8",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-jsonwebtoken: verification step bypass with an altered token",
          "Description": "In jsonwebtoken node module before 4.2.2 it is possible for an attacker to bypass verification when a token digitally signed with an asymmetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family).",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 7.5,
              "V3Score": 9.8
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 7.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2015-9235",
            "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "https://github.com/advisories/GHSA-c7hr-j4mj-j2w6",
            "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687",
            "https://nodesecurity.io/advisories/17",
            "https://nvd.nist.gov/vuln/detail/CVE-2015-9235",
            "https://www.npmjs.com/advisories/17",
            "https://www.timmclean.net/2015/02/25/jwt-alg-none.html"
          ],
          "PublishedDate": "2018-05-29T20:29:00Z",
          "LastModifiedDate": "2019-10-09T23:15:00Z"
        },
        {
          "VulnerabilityID": "NSWG-ECO-17",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.1.0",
          "FixedVersion": "\u003e=4.2.2",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "Ref": "pkg:npm/jsonwebtoken@0.1.0?package-id=c2cb957234b9ea8",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "Verification Bypass",
          "Description": "It is possible for an attacker to bypass verification when \"a token digitally signed with an asymetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)\" [1]",
          "Severity": "HIGH",
          "References": [
            "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687",
            "https://www.timmclean.net/2015/02/25/jwt-alg-none.html"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-23539",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.1.0",
          "FixedVersion": "9.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-23539",
          "Ref": "pkg:npm/jsonwebtoken@0.1.0?package-id=c2cb957234b9ea8",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "jsonwebtoken: Unrestricted key type could lead to legacy keys usagen",
          "Description": "Versions `\u003c=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. You are affected if you are using an algorithm and a key type other than a combination listed in the GitHub Security Advisory as unaffected. This issue has been fixed, please update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, if you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option to `true` in the `sign()` and/or `verify()` functions.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 8.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 8.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-23539",
            "https://github.com/advisories/GHSA-8cf7-32gw-wr33",
            "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23539"
          ],
          "PublishedDate": "2022-12-23T00:15:00Z",
          "LastModifiedDate": "2022-12-30T21:48:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-23540",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.1.0",
          "FixedVersion": "9.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-23540",
          "Ref": "pkg:npm/jsonwebtoken@0.1.0?package-id=c2cb957234b9ea8",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "jsonwebtoken: Insecure default algorithm in jwt.verify() could lead to signature validation bypass",
          "Description": "In versions `\u003c=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
              "V3Score": 6.4
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L",
              "V3Score": 7.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
              "V3Score": 6.4
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-23540",
            "https://github.com/advisories/GHSA-qwph-4952-7xr6",
            "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23540"
          ],
          "PublishedDate": "2022-12-22T19:15:00Z",
          "LastModifiedDate": "2023-02-27T19:56:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-23541",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.1.0",
          "FixedVersion": "9.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-23541",
          "Ref": "pkg:npm/jsonwebtoken@0.1.0?package-id=c2cb957234b9ea8",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "jsonwebtoken: Insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC",
          "Description": "jsonwebtoken is an implementation of JSON Web Tokens. Versions `\u003c= 8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument from the readme link will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification, other than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. If your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. This issue has been patched, please update to version 9.0.0.",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 6.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-23541",
            "https://github.com/advisories/GHSA-hjrf-2m68-5959",
            "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23541"
          ],
          "PublishedDate": "2022-12-22T18:15:00Z",
          "LastModifiedDate": "2023-02-27T19:55:00Z"
        },
        {
          "VulnerabilityID": "CVE-2015-9235",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.4.0",
          "FixedVersion": "4.2.2",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2015-9235",
          "Ref": "pkg:npm/jsonwebtoken@0.4.0?package-id=79f89436ca1d609",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-jsonwebtoken: verification step bypass with an altered token",
          "Description": "In jsonwebtoken node module before 4.2.2 it is possible for an attacker to bypass verification when a token digitally signed with an asymmetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family).",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 7.5,
              "V3Score": 9.8
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 7.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2015-9235",
            "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "https://github.com/advisories/GHSA-c7hr-j4mj-j2w6",
            "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687",
            "https://nodesecurity.io/advisories/17",
            "https://nvd.nist.gov/vuln/detail/CVE-2015-9235",
            "https://www.npmjs.com/advisories/17",
            "https://www.timmclean.net/2015/02/25/jwt-alg-none.html"
          ],
          "PublishedDate": "2018-05-29T20:29:00Z",
          "LastModifiedDate": "2019-10-09T23:15:00Z"
        },
        {
          "VulnerabilityID": "NSWG-ECO-17",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.4.0",
          "FixedVersion": "\u003e=4.2.2",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "Ref": "pkg:npm/jsonwebtoken@0.4.0?package-id=79f89436ca1d609",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "Verification Bypass",
          "Description": "It is possible for an attacker to bypass verification when \"a token digitally signed with an asymetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)\" [1]",
          "Severity": "HIGH",
          "References": [
            "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687",
            "https://www.timmclean.net/2015/02/25/jwt-alg-none.html"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-23539",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.4.0",
          "FixedVersion": "9.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-23539",
          "Ref": "pkg:npm/jsonwebtoken@0.4.0?package-id=79f89436ca1d609",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "jsonwebtoken: Unrestricted key type could lead to legacy keys usagen",
          "Description": "Versions `\u003c=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. You are affected if you are using an algorithm and a key type other than a combination listed in the GitHub Security Advisory as unaffected. This issue has been fixed, please update to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, if you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option to `true` in the `sign()` and/or `verify()` functions.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 8.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 8.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-23539",
            "https://github.com/advisories/GHSA-8cf7-32gw-wr33",
            "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23539"
          ],
          "PublishedDate": "2022-12-23T00:15:00Z",
          "LastModifiedDate": "2022-12-30T21:48:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-23540",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.4.0",
          "FixedVersion": "9.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-23540",
          "Ref": "pkg:npm/jsonwebtoken@0.4.0?package-id=79f89436ca1d609",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "jsonwebtoken: Insecure default algorithm in jwt.verify() could lead to signature validation bypass",
          "Description": "In versions `\u003c=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
              "V3Score": 6.4
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L",
              "V3Score": 7.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
              "V3Score": 6.4
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-23540",
            "https://github.com/advisories/GHSA-qwph-4952-7xr6",
            "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23540"
          ],
          "PublishedDate": "2022-12-22T19:15:00Z",
          "LastModifiedDate": "2023-02-27T19:56:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-23541",
          "PkgName": "jsonwebtoken",
          "InstalledVersion": "0.4.0",
          "FixedVersion": "9.0.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-23541",
          "Ref": "pkg:npm/jsonwebtoken@0.4.0?package-id=79f89436ca1d609",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "jsonwebtoken: Insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC",
          "Description": "jsonwebtoken is an implementation of JSON Web Tokens. Versions `\u003c= 8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function referring to the `secretOrPublicKey` argument from the readme link will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification, other than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. If your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. This issue has been patched, please update to version 9.0.0.",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 6.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-23541",
            "https://github.com/advisories/GHSA-hjrf-2m68-5959",
            "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3",
            "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0",
            "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23541"
          ],
          "PublishedDate": "2022-12-22T18:15:00Z",
          "LastModifiedDate": "2023-02-27T19:55:00Z"
        },
        {
          "VulnerabilityID": "CVE-2016-1000223",
          "PkgName": "jws",
          "InstalledVersion": "0.2.6",
          "FixedVersion": "\u003e=3.0.0",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2016-1000223",
          "Ref": "pkg:npm/jws@0.2.6?package-id=e4e18ad6da5f2fd3",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "Forgeable Public/Private Tokens",
          "Description": "Since \"algorithm\" isn't enforced in `jws.verify()`, a malicious user could choose what algorithm is sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.\n\nIn addition, there is the `none` algorithm to be concerned about.  In versions prior to 3.0.0, verification of the token could be bypassed when the `alg` field is set to `none`.\n\n*Edit ( 7/29/16 ): A previous version of this advisory incorrectly stated that the vulnerability was patched in version 2.0.0 instead of 3.0.0. The advisory has been updated to reflect this new information. Thanks to Fabien Catteau for reporting the error.*",
          "Severity": "HIGH",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.7
            }
          },
          "References": [
            "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
            "https://github.com/advisories/GHSA-gjcw-v447-2w7q",
            "https://github.com/brianloveswords/node-jws/commit/585d0e1e97b6747c10cf5b7689ccc5618a89b299#diff-4ac32a78649ca5bdd8e0ba38b7006a1e",
            "https://nvd.nist.gov/vuln/detail/CVE-2016-1000223",
            "https://snyk.io/vuln/npm:jws:20160726",
            "https://www.npmjs.com/advisories/88"
          ]
        },
        {
          "VulnerabilityID": "CVE-2019-10744",
          "PkgName": "lodash",
          "InstalledVersion": "2.4.2",
          "FixedVersion": "4.17.12",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2019-10744",
          "Ref": "pkg:npm/lodash@2.4.2?package-id=fa8ac84040da0744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-lodash: prototype pollution in defaultsDeep function leading to modifying properties",
          "Description": "Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
          "Severity": "CRITICAL",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
              "V3Score": 9.1
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
              "V2Score": 6.4,
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H",
              "V3Score": 9.1
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2019:3024",
            "https://access.redhat.com/security/cve/CVE-2019-10744",
            "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "https://github.com/lodash/lodash/pull/4336",
            "https://nvd.nist.gov/vuln/detail/CVE-2019-10744",
            "https://security.netapp.com/advisory/ntap-20191004-0005/",
            "https://snyk.io/vuln/SNYK-JS-LODASH-450202",
            "https://support.f5.com/csp/article/K47105354?utm_source=f5support\u0026amp;utm_medium=RSS",
            "https://www.npmjs.com/advisories/1065",
            "https://www.oracle.com/security-alerts/cpujan2021.html",
            "https://www.oracle.com/security-alerts/cpuoct2020.html"
          ],
          "PublishedDate": "2019-07-26T00:15:00Z",
          "LastModifiedDate": "2021-03-16T13:57:00Z"
        },
        {
          "VulnerabilityID": "CVE-2018-16487",
          "PkgName": "lodash",
          "InstalledVersion": "2.4.2",
          "FixedVersion": "\u003e=4.17.11",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2018-16487",
          "Ref": "pkg:npm/lodash@2.4.2?package-id=fa8ac84040da0744",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "lodash: Prototype pollution in utilities function",
          "Description": "A prototype pollution vulnerability was found in lodash \u003c4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",
          "Severity": "HIGH",
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "V2Score": 6.8,
              "V3Score": 5.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
              "V3Score": 5.6
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2018-16487",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-16487",
            "https://github.com/advisories/GHSA-4xc9-xhrj-v574",
            "https://hackerone.com/reports/380873",
            "https://nvd.nist.gov/vuln/detail/CVE-2018-16487",
            "https://security.netapp.com/advisory/ntap-20190919-0004/",
            "https://www.npmjs.com/advisories/782"
          ],
          "PublishedDate": "2019-02-01T18:29:00Z",
          "LastModifiedDate": "2020-09-18T16:38:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-8203",
          "PkgName": "lodash",
          "InstalledVersion": "2.4.2",
          "FixedVersion": "4.17.20",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8203",
          "Ref": "pkg:npm/lodash@2.4.2?package-id=fa8ac84040da0744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-lodash: prototype pollution in zipObjectDeep function",
          "Description": "Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-1321"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H",
              "V3Score": 7.4
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H",
              "V2Score": 5.8,
              "V3Score": 7.4
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H",
              "V3Score": 7.4
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8203",
            "https://github.com/advisories/GHSA-p6mc-m468-83gw",
            "https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12",
            "https://github.com/lodash/lodash/issues/4744",
            "https://github.com/lodash/lodash/issues/4874",
            "https://hackerone.com/reports/712065",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8203",
            "https://security.netapp.com/advisory/ntap-20200724-0006/",
            "https://www.npmjs.com/advisories/1523",
            "https://www.oracle.com//security-alerts/cpujul2021.html",
            "https://www.oracle.com/security-alerts/cpuApr2021.html",
            "https://www.oracle.com/security-alerts/cpuapr2022.html",
            "https://www.oracle.com/security-alerts/cpujan2022.html",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2020-07-15T17:15:00Z",
          "LastModifiedDate": "2022-05-12T15:01:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-23337",
          "PkgName": "lodash",
          "InstalledVersion": "2.4.2",
          "FixedVersion": "4.17.21",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-23337",
          "Ref": "pkg:npm/lodash@2.4.2?package-id=fa8ac84040da0744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-lodash: command injection via template",
          "Description": "Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-94"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 7.2
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:S/C:P/I:P/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
              "V2Score": 6.5,
              "V3Score": 7.2
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 7.2
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-23337",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-23337",
            "https://github.com/advisories/GHSA-35jh-r3h4-6jhm",
            "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js#L14851",
            "https://github.com/lodash/lodash/blob/ddfd9b11a0126db2302cb70ec9973b66baec0975/lodash.js%23L14851",
            "https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-23337",
            "https://security.netapp.com/advisory/ntap-20210312-0006/",
            "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074932",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074930",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074928",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074931",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074929",
            "https://snyk.io/vuln/SNYK-JS-LODASH-1040724",
            "https://www.oracle.com//security-alerts/cpujul2021.html",
            "https://www.oracle.com/security-alerts/cpujan2022.html",
            "https://www.oracle.com/security-alerts/cpujul2022.html",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2021-02-15T13:15:00Z",
          "LastModifiedDate": "2022-09-13T21:25:00Z"
        },
        {
          "VulnerabilityID": "CVE-2019-1010266",
          "PkgName": "lodash",
          "InstalledVersion": "2.4.2",
          "FixedVersion": "4.17.11",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2019-1010266",
          "Ref": "pkg:npm/lodash@2.4.2?package-id=fa8ac84040da0744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "lodash: uncontrolled resource consumption in Data handler causing denial of service",
          "Description": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-770"
          ],
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:S/C:N/I:N/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
              "V2Score": 4,
              "V3Score": 6.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 4.4
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2019-1010266",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1010266",
            "https://github.com/advisories/GHSA-x5rq-j2xg-h7qm",
            "https://github.com/lodash/lodash/commit/5c08f18d365b64063bfbfa686cbb97cdd6267347",
            "https://github.com/lodash/lodash/issues/3359",
            "https://github.com/lodash/lodash/wiki/Changelog",
            "https://nvd.nist.gov/vuln/detail/CVE-2019-1010266",
            "https://security.netapp.com/advisory/ntap-20190919-0004/",
            "https://snyk.io/vuln/SNYK-JS-LODASH-73639"
          ],
          "PublishedDate": "2019-07-17T21:15:00Z",
          "LastModifiedDate": "2020-09-30T13:40:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-28500",
          "PkgName": "lodash",
          "InstalledVersion": "2.4.2",
          "FixedVersion": "4.17.21",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-28500",
          "Ref": "pkg:npm/lodash@2.4.2?package-id=fa8ac84040da0744",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-lodash: ReDoS via the toNumber, trim and trimEnd functions",
          "Description": "Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V2Score": 5,
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-28500",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28500",
            "https://github.com/advisories/GHSA-29mw-wpgm-hmr9",
            "https://github.com/lodash/lodash/blob/npm/trimEnd.js#L8",
            "https://github.com/lodash/lodash/blob/npm/trimEnd.js%23L8",
            "https://github.com/lodash/lodash/pull/5065",
            "https://github.com/lodash/lodash/pull/5065/commits/02906b8191d3c100c193fe6f7b27d1c40f200bb7",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-28500",
            "https://security.netapp.com/advisory/ntap-20210312-0006/",
            "https://snyk.io/vuln/SNYK-JAVA-ORGFUJIONWEBJARS-1074896",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-1074894",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWER-1074892",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSBOWERGITHUBLODASH-1074895",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1074893",
            "https://snyk.io/vuln/SNYK-JS-LODASH-1018905",
            "https://www.oracle.com//security-alerts/cpujul2021.html",
            "https://www.oracle.com/security-alerts/cpujan2022.html",
            "https://www.oracle.com/security-alerts/cpujul2022.html",
            "https://www.oracle.com/security-alerts/cpuoct2021.html"
          ],
          "PublishedDate": "2021-02-15T11:15:00Z",
          "LastModifiedDate": "2022-09-13T21:18:00Z"
        },
        {
          "VulnerabilityID": "CVE-2018-3721",
          "PkgName": "lodash",
          "InstalledVersion": "2.4.2",
          "FixedVersion": "\u003e=4.17.5",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2018-3721",
          "Ref": "pkg:npm/lodash@2.4.2?package-id=fa8ac84040da0744",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "lodash: Prototype pollution in utilities function",
          "Description": "lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
          "Severity": "LOW",
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:S/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N",
              "V2Score": 4,
              "V3Score": 6.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 2.9
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2018-3721",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-3721",
            "https://github.com/advisories/GHSA-fvqr-27wr-82fm",
            "https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a",
            "https://hackerone.com/reports/310443",
            "https://nvd.nist.gov/vuln/detail/CVE-2018-3721",
            "https://security.netapp.com/advisory/ntap-20190919-0004/",
            "https://snyk.io/vuln/npm:lodash:20180130",
            "https://www.npmjs.com/advisories/577"
          ],
          "PublishedDate": "2018-06-07T02:29:00Z",
          "LastModifiedDate": "2019-10-03T00:03:00Z"
        },
        {
          "VulnerabilityID": "GHSA-5mrr-rgp6-x4gr",
          "PkgName": "marsdb",
          "InstalledVersion": "0.6.11",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-5mrr-rgp6-x4gr",
          "Ref": "pkg:npm/marsdb@0.6.11?package-id=7917e8df2ab7aae0",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Command Injection in marsdb",
          "Description": "All versions of `marsdb` are vulnerable to Command Injection. In the `DocumentMatcher` class, selectors on `$where` clauses are passed to a Function constructor unsanitized. This allows attackers to run arbitrary commands in the system when the function is executed.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available.",
          "Severity": "CRITICAL",
          "References": [
            "https://github.com/advisories/GHSA-5mrr-rgp6-x4gr",
            "https://github.com/bkimminich/juice-shop/issues/1173",
            "https://www.npmjs.com/advisories/1122"
          ]
        },
        {
          "VulnerabilityID": "CVE-2017-18214",
          "PkgName": "moment",
          "InstalledVersion": "2.0.0",
          "FixedVersion": "2.19.3",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2017-18214",
          "Ref": "pkg:npm/moment@2.0.0?package-id=f07e504e5da7ddfe",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "nodejs-moment: Regular expression denial of service",
          "Description": "The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-400"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V2Score": 5,
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2017-18214",
            "https://github.com/advisories/GHSA-446m-mv8f-q348",
            "https://github.com/moment/moment/issues/4163",
            "https://github.com/moment/moment/pull/4326",
            "https://nodesecurity.io/advisories/532",
            "https://nvd.nist.gov/vuln/detail/CVE-2017-18214",
            "https://www.npmjs.com/advisories/532",
            "https://www.tenable.com/security/tns-2019-02"
          ],
          "PublishedDate": "2018-03-04T21:29:00Z",
          "LastModifiedDate": "2022-02-14T18:03:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-24785",
          "PkgName": "moment",
          "InstalledVersion": "2.0.0",
          "FixedVersion": "2.29.2",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-24785",
          "Ref": "pkg:npm/moment@2.0.0?package-id=f07e504e5da7ddfe",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Moment.js: Path traversal  in moment.locale",
          "Description": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-22",
            "CWE-27"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "V3Score": 7.5
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "V2Score": 5,
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-24785",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24785",
            "https://github.com/advisories/GHSA-8hfj-j24r-96c4",
            "https://github.com/moment/moment/commit/4211bfc8f15746be4019bba557e29a7ba83d54c5",
            "https://github.com/moment/moment/security/advisories/GHSA-8hfj-j24r-96c4",
            "https://lists.debian.org/debian-lts-announce/2023/01/msg00035.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6QIO6YNLTK2T7SPKDS4JEL45FANLNC2Q/",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ORJX2LF6KMPIHP6B2P6KZIVKMLE3LVJ5/",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-24785",
            "https://security.netapp.com/advisory/ntap-20220513-0006/",
            "https://ubuntu.com/security/notices/USN-5559-1",
            "https://www.tenable.com/security/tns-2022-09"
          ],
          "PublishedDate": "2022-04-04T17:15:00Z",
          "LastModifiedDate": "2023-02-16T19:27:00Z"
        },
        {
          "VulnerabilityID": "CVE-2016-4055",
          "PkgName": "moment",
          "InstalledVersion": "2.0.0",
          "FixedVersion": "\u003e=2.11.2",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2016-4055",
          "Ref": "pkg:npm/moment@2.0.0?package-id=f07e504e5da7ddfe",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "moment.js: regular expression denial of service",
          "Description": "The duration function in the moment package before 2.11.2 for Node.js allows remote attackers to cause a denial of service (CPU consumption) via a long string, aka a \"regular expression Denial of Service (ReDoS).\"",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-400"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 6.5
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:C",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
              "V2Score": 7.8,
              "V3Score": 6.5
            },
            "redhat": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:N/A:P",
              "V2Score": 4.3
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2016/04/20/11",
            "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html",
            "http://www.securityfocus.com/bid/95849",
            "https://access.redhat.com/security/cve/CVE-2016-4055",
            "https://github.com/advisories/GHSA-87vv-r9j6-g5qv",
            "https://lists.apache.org/thread.html/10f0f3aefd51444d1198c65f44ffdf2d78ca3359423dbc1c168c9731@%3Cdev.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/17ff53f7999e74fbe3cc0ceb4e1c3b00b180b7c5afec8e978837bc49@%3Cuser.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/52bafac05ad174000ea465fe275fd3cc7bd5c25535a7631c0bc9bfb2@%3Cuser.flink.apache.org%3E",
            "https://lists.apache.org/thread.html/54df3aeb4239b64b50b356f0ca6f986e3c4ca5b84c515dce077c7854@%3Cuser.flink.apache.org%3E",
            "https://nodesecurity.io/advisories/55",
            "https://nvd.nist.gov/vuln/detail/CVE-2016-4055",
            "https://www.npmjs.com/advisories/55",
            "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS",
            "https://www.tenable.com/security/tns-2019-02"
          ],
          "PublishedDate": "2017-01-23T21:59:00Z",
          "LastModifiedDate": "2022-06-06T17:18:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-21213",
          "PkgName": "mout",
          "InstalledVersion": "1.2.3",
          "FixedVersion": "1.2.4",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-21213",
          "Ref": "pkg:npm/mout@1.2.3?package-id=768895e26a784f9a",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Prototype Pollution in mout",
          "Description": "This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn mixes objects into the target object, recursively mixing existing child objects as well. In both cases, the key used to access the target object recursively is not checked, leading to exploiting this vulnerability. **Note:** This vulnerability derives from an incomplete fix of [CVE-2020-7792](https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544).",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-1321"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V2Score": 5,
              "V3Score": 7.5
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-vvv8-xw5f-3f88",
            "https://github.com/mout/mout/blob/master/src/object/deepFillIn.js",
            "https://github.com/mout/mout/blob/master/src/object/deepMixIn.js",
            "https://github.com/mout/mout/commit/17ffdc2a96417a63a0147156dc045e90d0d14c64",
            "https://github.com/mout/mout/pull/279",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-21213",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-2870623",
            "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2870622",
            "https://snyk.io/vuln/SNYK-JS-MOUT-2342654"
          ],
          "PublishedDate": "2022-06-17T20:15:00Z",
          "LastModifiedDate": "2022-06-28T14:43:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-23771",
          "PkgName": "notevil",
          "InstalledVersion": "1.3.3",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-23771",
          "Ref": "pkg:npm/notevil@1.3.3?package-id=e5d9f5ccac73651d",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Sandbox escape in notevil and argencoders-notevil",
          "Description": "This affects all versions of package notevil; all versions of package argencoders-notevil. It is vulnerable to Sandbox Escape leading to Prototype pollution. The package fails to restrict access to the main context, allowing an attacker to add or modify an object's prototype. **Note:** This vulnerability derives from an incomplete fix in [SNYK-JS-NOTEVIL-608878](https://security.snyk.io/vuln/SNYK-JS-NOTEVIL-608878).",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-1321"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
              "V3Score": 6.5
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:P/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
              "V2Score": 6.4,
              "V3Score": 6.5
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-8g4m-cjm2-96wq",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-23771",
            "https://snyk.io/vuln/SNYK-JS-ARGENCODERSNOTEVIL-2388587",
            "https://snyk.io/vuln/SNYK-JS-NOTEVIL-2385946"
          ],
          "PublishedDate": "2022-03-17T12:15:00Z",
          "LastModifiedDate": "2022-03-24T01:46:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-28155",
          "PkgName": "request",
          "InstalledVersion": "2.88.2",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-28155",
          "Ref": "pkg:npm/request@2.88.2?package-id=9ad88831998c9a5",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "** UNSUPPORTED WHEN ASSIGNED ** The Request package through 2.88.1 for ...",
          "Description": "** UNSUPPORTED WHEN ASSIGNED ** The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-918"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            }
          },
          "References": [
            "https://doyensec.com/resources/Doyensec_Advisory_RequestSSRF_Q12023.pdf",
            "https://github.com/advisories/GHSA-p8p7-x288-28g6",
            "https://github.com/request/request/issues/3442",
            "https://github.com/request/request/pull/3444",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-28155"
          ],
          "PublishedDate": "2023-03-16T15:15:00Z",
          "LastModifiedDate": "2023-03-22T19:32:00Z"
        },
        {
          "VulnerabilityID": "CVE-2016-1000237",
          "PkgName": "sanitize-html",
          "InstalledVersion": "1.4.2",
          "FixedVersion": "\u003e=1.4.3",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2016-1000237",
          "Ref": "pkg:npm/sanitize-html@1.4.2?package-id=84a31d12f591366",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "XSS - Sanitization not applied recursively",
          "Description": "sanitize-html before 1.4.3 has XSS.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-79"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            },
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V2Score": 4.3,
              "V3Score": 6.1
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-3j7m-hmh3-9jmp",
            "https://github.com/apostrophecms/sanitize-html/commit/762fbc7bba389f3f789cc291c1eb2b64f60f2caf",
            "https://github.com/apostrophecms/sanitize-html/issues/29",
            "https://github.com/punkave/sanitize-html/issues/29",
            "https://nodesecurity.io/advisories/135",
            "https://nvd.nist.gov/vuln/detail/CVE-2016-1000237",
            "https://raw.githubusercontent.com/distributedweaknessfiling/cvelist/master/2016/1000xxx/CVE-2016-1000237.json",
            "https://www.npmjs.com/advisories/135"
          ],
          "PublishedDate": "2020-01-23T15:15:00Z",
          "LastModifiedDate": "2020-01-24T19:44:00Z"
        },
        {
          "VulnerabilityID": "CVE-2017-16016",
          "PkgName": "sanitize-html",
          "InstalledVersion": "1.4.2",
          "FixedVersion": "1.11.4",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2017-16016",
          "Ref": "pkg:npm/sanitize-html@1.4.2?package-id=84a31d12f591366",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "Cross-Site Scripting in sanitize-html",
          "Description": "Sanitize-html is a library for scrubbing html input of malicious values. Versions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios: If allowed at least one nonTextTags, the result is a potential XSS vulnerability.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-79"
          ],
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V2Score": 4.3,
              "V3Score": 6.1
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-xc6g-ggrc-qq4r",
            "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403",
            "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403)))",
            "https://github.com/punkave/sanitize-html/issues/100",
            "https://nodesecurity.io/advisories/154",
            "https://npmjs.com/package/sanitize-html#discarding-the-entire-contents-of-a-disallowed-tag",
            "https://nvd.nist.gov/vuln/detail/CVE-2017-16016",
            "https://www.npmjs.com/advisories/154"
          ],
          "PublishedDate": "2018-06-04T19:29:00Z",
          "LastModifiedDate": "2019-10-09T23:24:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-26539",
          "PkgName": "sanitize-html",
          "InstalledVersion": "1.4.2",
          "FixedVersion": "2.3.1",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-26539",
          "Ref": "pkg:npm/sanitize-html@1.4.2?package-id=84a31d12f591366",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "sanitize-html: improper handling of internationalized domain name (IDN) can lead to bypass hostname whitelist validation",
          "Description": "Apostrophe Technologies sanitize-html before 2.3.1 does not properly handle internationalized domain name (IDN) which could allow an attacker to bypass hostname whitelist validation set by the \"allowedIframeHostnames\" option.",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V3Score": 5.3
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V2Score": 5,
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-26539",
            "https://advisory.checkmarx.net/advisory/CX-2021-4308",
            "https://github.com/advisories/GHSA-rjqq-98f6-6j3r",
            "https://github.com/apostrophecms/sanitize-html/blob/main/CHANGELOG.md#231-2021-01-22",
            "https://github.com/apostrophecms/sanitize-html/pull/458",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-26539"
          ],
          "PublishedDate": "2021-02-08T17:15:00Z",
          "LastModifiedDate": "2022-04-26T15:24:00Z"
        },
        {
          "VulnerabilityID": "CVE-2021-26540",
          "PkgName": "sanitize-html",
          "InstalledVersion": "1.4.2",
          "FixedVersion": "2.3.2",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2021-26540",
          "Ref": "pkg:npm/sanitize-html@1.4.2?package-id=84a31d12f591366",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "sanitize-html: improper validation of hostnames set by the \"allowedIframeHostnames\" option can lead to bypass hostname whitelist for iframe element",
          "Description": "Apostrophe Technologies sanitize-html before 2.3.2 does not properly validate the hostnames set by the \"allowedIframeHostnames\" option when the \"allowIframeRelativeUrls\" is set to true, which allows attackers to bypass hostname whitelist for iframe element, related using an src value that starts with \"/\\\\example.com\".",
          "Severity": "MEDIUM",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V3Score": 5.3
            },
            "nvd": {
              "V2Vector": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V2Score": 5,
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2021-26540",
            "https://advisory.checkmarx.net/advisory/CX-2021-4309",
            "https://github.com/advisories/GHSA-mjxr-4v3x-q3m4",
            "https://github.com/apostrophecms/sanitize-html/blob/main/CHANGELOG.md#232-2021-01-26",
            "https://github.com/apostrophecms/sanitize-html/pull/460",
            "https://nvd.nist.gov/vuln/detail/CVE-2021-26540"
          ],
          "PublishedDate": "2021-02-08T17:15:00Z",
          "LastModifiedDate": "2021-04-01T15:02:00Z"
        },
        {
          "VulnerabilityID": "NSWG-ECO-154",
          "PkgName": "sanitize-html",
          "InstalledVersion": "1.4.2",
          "FixedVersion": "\u003e=1.11.4",
          "Layer": {},
          "SeveritySource": "nodejs-security-wg",
          "Ref": "pkg:npm/sanitize-html@1.4.2?package-id=84a31d12f591366",
          "DataSource": {
            "ID": "nodejs-security-wg",
            "Name": "Node.js Ecosystem Security Working Group",
            "URL": "https://github.com/nodejs/security-wg"
          },
          "Title": "Cross Site Scripting",
          "Description": "Sanitize-html is a library for scrubbing html input of malicious values.\n\nVersions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios:\n\nIf allowed at least one nonTextTags, the result is a potential XSS vulnerability.\nPoC:\n\n```\nvar sanitizeHtml = require('sanitize-html');\n\nvar dirty = '!\u003ctextarea\u003e\u0026lt;/textarea\u0026gt;\u003csvg/onload=prompt`xs`\u0026gt;\u003c/textarea\u003e!';\nvar clean = sanitizeHtml(dirty, {\n    allowedTags: [ 'textarea' ]\n});\n\nconsole.log(clean);\n\n// !\u003ctextarea\u003e\u003c/textarea\u003e\u003csvg/onload=prompt`xs`\u003e\u003c/textarea\u003e!\n```",
          "Severity": "MEDIUM",
          "References": [
            "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403",
            "https://github.com/punkave/sanitize-html/issues/100"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-43441",
          "PkgName": "sqlite3",
          "InstalledVersion": "5.1.4",
          "FixedVersion": "5.1.5",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-43441",
          "Ref": "pkg:npm/sqlite3@5.1.4?package-id=ae2654908178c7bd",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "A code execution vulnerability exists in the Statement Bindings functi ...",
          "Description": "A code execution vulnerability exists in the Statement Bindings functionality of Ghost Foundation node-sqlite3 5.1.1. A specially-crafted Javascript file can lead to arbitrary code execution. An attacker can provide malicious input to trigger this vulnerability.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-913"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 8.1
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            }
          },
          "References": [
            "https://github.com/TryGhost/node-sqlite3/commit/edb1934dd222ae55632e120d8f64552d5191c781",
            "https://github.com/TryGhost/node-sqlite3/security/advisories/GHSA-jqv5-7xpx-qj74",
            "https://github.com/advisories/GHSA-jqv5-7xpx-qj74",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-43441",
            "https://talosintelligence.com/vulnerability_reports/TALOS-2022-1645"
          ],
          "PublishedDate": "2023-03-16T21:15:00Z",
          "LastModifiedDate": "2023-03-22T21:01:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-28154",
          "PkgName": "webpack",
          "InstalledVersion": "5.75.0",
          "FixedVersion": "5.76.0",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-28154",
          "Ref": "pkg:npm/webpack@5.75.0?package-id=8bcb216232d8e269",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Npm",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm"
          },
          "Title": "webpack: avoid cross-realm objects",
          "Description": "Webpack 5 before 5.76.0 does not avoid cross-realm object access. ImportParserPlugin.js mishandles the magic comment feature. An attacker who controls a property of an untrusted object can obtain access to the real global object.",
          "Severity": "HIGH",
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:H",
              "V3Score": 7.6
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 9.8
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2023-28154",
            "https://github.com/advisories/GHSA-hc6q-2mpp-qw7j",
            "https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0",
            "https://github.com/webpack/webpack/pull/16500",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-28154"
          ],
          "PublishedDate": "2023-03-13T01:15:00Z",
          "LastModifiedDate": "2023-03-17T15:19:00Z"
        }
      ]
    }
  ]
}
